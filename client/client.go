// This file was auto-generated by Fern from our API Definition.

package client

import (
	api "github.com/StackGuardian/sg-sdk-go/api"
	core "github.com/StackGuardian/sg-sdk-go/core"
	option "github.com/StackGuardian/sg-sdk-go/option"
	policies "github.com/StackGuardian/sg-sdk-go/policies"
	stacks "github.com/StackGuardian/sg-sdk-go/stacks"
	stackworkflows "github.com/StackGuardian/sg-sdk-go/stackworkflows"
	workflowruns "github.com/StackGuardian/sg-sdk-go/workflowruns"
	workflows "github.com/StackGuardian/sg-sdk-go/workflows"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *core.Caller
	header  http.Header

	Api            *api.Client
	Policies       *policies.Client
	Stacks         *stacks.Client
	StackWorkflows *stackworkflows.Client
	WorkflowRuns   *workflowruns.Client
	Workflows      *workflows.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: core.NewCaller(
			&core.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:         options.ToHeader(),
		Api:            api.NewClient(opts...),
		Policies:       policies.NewClient(opts...),
		Stacks:         stacks.NewClient(opts...),
		StackWorkflows: stackworkflows.NewClient(opts...),
		WorkflowRuns:   workflowruns.NewClient(opts...),
		Workflows:      workflows.NewClient(opts...),
	}
}
