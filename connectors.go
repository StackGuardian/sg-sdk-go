// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"

	core "github.com/StackGuardian/sg-sdk-go/core"
	internal "github.com/StackGuardian/sg-sdk-go/internal"
)

type Integration struct {
	ResourceName      *core.Optional[string]            `json:"ResourceName,omitempty" url:"-"`
	Description       *core.Optional[string]            `json:"Description,omitempty" url:"-"`
	Settings          *core.Optional[Settings]          `json:"Settings,omitempty" url:"-"`
	DiscoverySettings *core.Optional[Discoverysettings] `json:"DiscoverySettings,omitempty" url:"-"`
	Scope             *core.Optional[[]string]          `json:"Scope,omitempty" url:"-"`
	Tags              *core.Optional[[]string]          `json:"Tags,omitempty" url:"-"`
	// Contextual tags to give context to your tags
	ContextTags *core.Optional[map[string]*string] `json:"ContextTags,omitempty" url:"-"`
}

type ListAllConnectorRequest struct {
	// Pagination token to retrieve the next set of results
	Lastevaluatedkey *string `json:"-" url:"lastevaluatedkey,omitempty"`
}

type PatchedIntegration struct {
	ResourceName      *core.Optional[string]            `json:"ResourceName,omitempty" url:"-"`
	Description       *core.Optional[string]            `json:"Description,omitempty" url:"-"`
	Settings          *core.Optional[Settings]          `json:"Settings,omitempty" url:"-"`
	DiscoverySettings *core.Optional[Discoverysettings] `json:"DiscoverySettings,omitempty" url:"-"`
	Scope             *core.Optional[[]string]          `json:"Scope,omitempty" url:"-"`
	Tags              *core.Optional[[]string]          `json:"Tags,omitempty" url:"-"`
	// Contextual tags to give context to your tags
	ContextTags *core.Optional[map[string]*string] `json:"ContextTags,omitempty" url:"-"`
}

type DiscoveryBenchmark struct {
	RuntimeSource     *CustomSource               `json:"runtimeSource,omitempty" url:"runtimeSource,omitempty"`
	Checks            []string                    `json:"checks,omitempty" url:"checks,omitempty"`
	Regions           map[string]*DiscoveryRegion `json:"regions,omitempty" url:"regions,omitempty"`
	Description       *string                     `json:"description,omitempty" url:"description,omitempty"`
	SummaryDesc       *string                     `json:"summaryDesc,omitempty" url:"summaryDesc,omitempty"`
	Active            *bool                       `json:"active,omitempty" url:"active,omitempty"`
	Label             string                      `json:"label" url:"label"`
	IsCustomCheck     *bool                       `json:"isCustomCheck,omitempty" url:"isCustomCheck,omitempty"`
	SummaryTitle      string                      `json:"summaryTitle" url:"summaryTitle"`
	DiscoveryInterval *int                        `json:"discoveryInterval,omitempty" url:"discoveryInterval,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (d *DiscoveryBenchmark) GetRuntimeSource() *CustomSource {
	if d == nil {
		return nil
	}
	return d.RuntimeSource
}

func (d *DiscoveryBenchmark) GetChecks() []string {
	if d == nil {
		return nil
	}
	return d.Checks
}

func (d *DiscoveryBenchmark) GetRegions() map[string]*DiscoveryRegion {
	if d == nil {
		return nil
	}
	return d.Regions
}

func (d *DiscoveryBenchmark) GetDescription() *string {
	if d == nil {
		return nil
	}
	return d.Description
}

func (d *DiscoveryBenchmark) GetSummaryDesc() *string {
	if d == nil {
		return nil
	}
	return d.SummaryDesc
}

func (d *DiscoveryBenchmark) GetActive() *bool {
	if d == nil {
		return nil
	}
	return d.Active
}

func (d *DiscoveryBenchmark) GetLabel() string {
	if d == nil {
		return ""
	}
	return d.Label
}

func (d *DiscoveryBenchmark) GetIsCustomCheck() *bool {
	if d == nil {
		return nil
	}
	return d.IsCustomCheck
}

func (d *DiscoveryBenchmark) GetSummaryTitle() string {
	if d == nil {
		return ""
	}
	return d.SummaryTitle
}

func (d *DiscoveryBenchmark) GetDiscoveryInterval() *int {
	if d == nil {
		return nil
	}
	return d.DiscoveryInterval
}

func (d *DiscoveryBenchmark) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DiscoveryBenchmark) UnmarshalJSON(data []byte) error {
	type unmarshaler DiscoveryBenchmark
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DiscoveryBenchmark(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties
	d.rawJSON = json.RawMessage(data)
	return nil
}

func (d *DiscoveryBenchmark) String() string {
	if len(d.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(d.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type DiscoveryRegion struct {
	Emails []string `json:"emails,omitempty" url:"emails,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (d *DiscoveryRegion) GetEmails() []string {
	if d == nil {
		return nil
	}
	return d.Emails
}

func (d *DiscoveryRegion) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DiscoveryRegion) UnmarshalJSON(data []byte) error {
	type unmarshaler DiscoveryRegion
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DiscoveryRegion(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties
	d.rawJSON = json.RawMessage(data)
	return nil
}

func (d *DiscoveryRegion) String() string {
	if len(d.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(d.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type Discoverysettings struct {
	Benchmarks map[string]*DiscoveryBenchmark `json:"benchmarks,omitempty" url:"benchmarks,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (d *Discoverysettings) GetBenchmarks() map[string]*DiscoveryBenchmark {
	if d == nil {
		return nil
	}
	return d.Benchmarks
}

func (d *Discoverysettings) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *Discoverysettings) UnmarshalJSON(data []byte) error {
	type unmarshaler Discoverysettings
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = Discoverysettings(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties
	d.rawJSON = json.RawMessage(data)
	return nil
}

func (d *Discoverysettings) String() string {
	if len(d.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(d.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type GeneratedConnectorDeleteResponse struct {
	Msg string `json:"msg" url:"msg"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedConnectorDeleteResponse) GetMsg() string {
	if g == nil {
		return ""
	}
	return g.Msg
}

func (g *GeneratedConnectorDeleteResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedConnectorDeleteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedConnectorDeleteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedConnectorDeleteResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedConnectorDeleteResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedConnectorListAllResponseMsg struct {
	Lastevaluatedkey string                            `json:"lastevaluatedkey" url:"lastevaluatedkey"`
	Msg              []*GeneratedConnectorReadResponse `json:"msg,omitempty" url:"msg,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedConnectorListAllResponseMsg) GetLastevaluatedkey() string {
	if g == nil {
		return ""
	}
	return g.Lastevaluatedkey
}

func (g *GeneratedConnectorListAllResponseMsg) GetMsg() []*GeneratedConnectorReadResponse {
	if g == nil {
		return nil
	}
	return g.Msg
}

func (g *GeneratedConnectorListAllResponseMsg) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedConnectorListAllResponseMsg) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedConnectorListAllResponseMsg
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedConnectorListAllResponseMsg(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedConnectorListAllResponseMsg) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedConnectorReadResponse struct {
	Msg *GeneratedConnectorReadResponseMsg `json:"msg,omitempty" url:"msg,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedConnectorReadResponse) GetMsg() *GeneratedConnectorReadResponseMsg {
	if g == nil {
		return nil
	}
	return g.Msg
}

func (g *GeneratedConnectorReadResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedConnectorReadResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedConnectorReadResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedConnectorReadResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedConnectorReadResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedConnectorReadResponseMsg struct {
	IsArchive         string                                              `json:"IsArchive" url:"IsArchive"`
	IsActive          string                                              `json:"IsActive" url:"IsActive"`
	Description       string                                              `json:"Description" url:"Description"`
	ResourceId        string                                              `json:"ResourceId" url:"ResourceId"`
	Scope             []string                                            `json:"Scope,omitempty" url:"Scope,omitempty"`
	ModifiedAt        float64                                             `json:"ModifiedAt" url:"ModifiedAt"`
	ParentId          string                                              `json:"ParentId" url:"ParentId"`
	ResourceType      string                                              `json:"ResourceType" url:"ResourceType"`
	Tags              []string                                            `json:"Tags,omitempty" url:"Tags,omitempty"`
	ContextTags       map[string]string                                   `json:"ContextTags,omitempty" url:"ContextTags,omitempty"`
	DocVersion        string                                              `json:"DocVersion" url:"DocVersion"`
	Authors           []string                                            `json:"Authors,omitempty" url:"Authors,omitempty"`
	ResourceName      string                                              `json:"ResourceName" url:"ResourceName"`
	SubResourceId     string                                              `json:"SubResourceId" url:"SubResourceId"`
	OrgId             string                                              `json:"OrgId" url:"OrgId"`
	CreatedAt         float64                                             `json:"CreatedAt" url:"CreatedAt"`
	DiscoverySettings *GeneratedConnectorReadResponseMsgDiscoverysettings `json:"DiscoverySettings,omitempty" url:"DiscoverySettings,omitempty"`
	Authentication    *GeneratedConnectorReadResponseMsgAuthentication    `json:"Authentication,omitempty" url:"Authentication,omitempty"`
	Settings          *GeneratedConnectorReadResponseMsgSettings          `json:"Settings,omitempty" url:"Settings,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedConnectorReadResponseMsg) GetIsArchive() string {
	if g == nil {
		return ""
	}
	return g.IsArchive
}

func (g *GeneratedConnectorReadResponseMsg) GetIsActive() string {
	if g == nil {
		return ""
	}
	return g.IsActive
}

func (g *GeneratedConnectorReadResponseMsg) GetDescription() string {
	if g == nil {
		return ""
	}
	return g.Description
}

func (g *GeneratedConnectorReadResponseMsg) GetResourceId() string {
	if g == nil {
		return ""
	}
	return g.ResourceId
}

func (g *GeneratedConnectorReadResponseMsg) GetScope() []string {
	if g == nil {
		return nil
	}
	return g.Scope
}

func (g *GeneratedConnectorReadResponseMsg) GetModifiedAt() float64 {
	if g == nil {
		return 0
	}
	return g.ModifiedAt
}

func (g *GeneratedConnectorReadResponseMsg) GetParentId() string {
	if g == nil {
		return ""
	}
	return g.ParentId
}

func (g *GeneratedConnectorReadResponseMsg) GetResourceType() string {
	if g == nil {
		return ""
	}
	return g.ResourceType
}

func (g *GeneratedConnectorReadResponseMsg) GetTags() []string {
	if g == nil {
		return nil
	}
	return g.Tags
}

func (g *GeneratedConnectorReadResponseMsg) GetContextTags() map[string]string {
	if g == nil {
		return nil
	}
	return g.ContextTags
}

func (g *GeneratedConnectorReadResponseMsg) GetDocVersion() string {
	if g == nil {
		return ""
	}
	return g.DocVersion
}

func (g *GeneratedConnectorReadResponseMsg) GetAuthors() []string {
	if g == nil {
		return nil
	}
	return g.Authors
}

func (g *GeneratedConnectorReadResponseMsg) GetResourceName() string {
	if g == nil {
		return ""
	}
	return g.ResourceName
}

func (g *GeneratedConnectorReadResponseMsg) GetSubResourceId() string {
	if g == nil {
		return ""
	}
	return g.SubResourceId
}

func (g *GeneratedConnectorReadResponseMsg) GetOrgId() string {
	if g == nil {
		return ""
	}
	return g.OrgId
}

func (g *GeneratedConnectorReadResponseMsg) GetCreatedAt() float64 {
	if g == nil {
		return 0
	}
	return g.CreatedAt
}

func (g *GeneratedConnectorReadResponseMsg) GetDiscoverySettings() *GeneratedConnectorReadResponseMsgDiscoverysettings {
	if g == nil {
		return nil
	}
	return g.DiscoverySettings
}

func (g *GeneratedConnectorReadResponseMsg) GetAuthentication() *GeneratedConnectorReadResponseMsgAuthentication {
	if g == nil {
		return nil
	}
	return g.Authentication
}

func (g *GeneratedConnectorReadResponseMsg) GetSettings() *GeneratedConnectorReadResponseMsgSettings {
	if g == nil {
		return nil
	}
	return g.Settings
}

func (g *GeneratedConnectorReadResponseMsg) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedConnectorReadResponseMsg) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedConnectorReadResponseMsg
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedConnectorReadResponseMsg(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedConnectorReadResponseMsg) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedConnectorReadResponseMsgAuthentication struct {
	AuthenticatedAt float64 `json:"authenticatedAt" url:"authenticatedAt"`
	Authenticated   bool    `json:"authenticated" url:"authenticated"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedConnectorReadResponseMsgAuthentication) GetAuthenticatedAt() float64 {
	if g == nil {
		return 0
	}
	return g.AuthenticatedAt
}

func (g *GeneratedConnectorReadResponseMsgAuthentication) GetAuthenticated() bool {
	if g == nil {
		return false
	}
	return g.Authenticated
}

func (g *GeneratedConnectorReadResponseMsgAuthentication) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedConnectorReadResponseMsgAuthentication) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedConnectorReadResponseMsgAuthentication
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedConnectorReadResponseMsgAuthentication(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedConnectorReadResponseMsgAuthentication) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedConnectorReadResponseMsgDiscoverysettings struct {
	DiscoveryInterval *int                                                                     `json:"discoveryInterval,omitempty" url:"discoveryInterval,omitempty"`
	Benchmarks        map[string]*GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks `json:"benchmarks,omitempty" url:"benchmarks,omitempty"`
	Regions           []*GeneratedConnectorReadResponseMsgDiscoverysettingsRegions             `json:"regions,omitempty" url:"regions,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettings) GetDiscoveryInterval() *int {
	if g == nil {
		return nil
	}
	return g.DiscoveryInterval
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettings) GetBenchmarks() map[string]*GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks {
	if g == nil {
		return nil
	}
	return g.Benchmarks
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettings) GetRegions() []*GeneratedConnectorReadResponseMsgDiscoverysettingsRegions {
	if g == nil {
		return nil
	}
	return g.Regions
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettings) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettings) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedConnectorReadResponseMsgDiscoverysettings
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedConnectorReadResponseMsgDiscoverysettings(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettings) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks struct {
	RuntimeSource     *CustomSource                                                                   `json:"runtimeSource,omitempty" url:"runtimeSource,omitempty"`
	Checks            []string                                                                        `json:"checks,omitempty" url:"checks,omitempty"`
	Regions           map[string]*GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarksRegions `json:"regions,omitempty" url:"regions,omitempty"`
	LastDiscoveryTime *int                                                                            `json:"lastDiscoveryTime,omitempty" url:"lastDiscoveryTime,omitempty"`
	Description       *string                                                                         `json:"description,omitempty" url:"description,omitempty"`
	SummaryDesc       *string                                                                         `json:"summaryDesc,omitempty" url:"summaryDesc,omitempty"`
	Active            bool                                                                            `json:"active" url:"active"`
	Label             *string                                                                         `json:"label,omitempty" url:"label,omitempty"`
	IsCustomCheck     *bool                                                                           `json:"isCustomCheck,omitempty" url:"isCustomCheck,omitempty"`
	SummaryTitle      *string                                                                         `json:"summaryTitle,omitempty" url:"summaryTitle,omitempty"`
	DiscoveryInterval *int                                                                            `json:"discoveryInterval,omitempty" url:"discoveryInterval,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetRuntimeSource() *CustomSource {
	if g == nil {
		return nil
	}
	return g.RuntimeSource
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetChecks() []string {
	if g == nil {
		return nil
	}
	return g.Checks
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetRegions() map[string]*GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarksRegions {
	if g == nil {
		return nil
	}
	return g.Regions
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetLastDiscoveryTime() *int {
	if g == nil {
		return nil
	}
	return g.LastDiscoveryTime
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetDescription() *string {
	if g == nil {
		return nil
	}
	return g.Description
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetSummaryDesc() *string {
	if g == nil {
		return nil
	}
	return g.SummaryDesc
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetActive() bool {
	if g == nil {
		return false
	}
	return g.Active
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetLabel() *string {
	if g == nil {
		return nil
	}
	return g.Label
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetIsCustomCheck() *bool {
	if g == nil {
		return nil
	}
	return g.IsCustomCheck
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetSummaryTitle() *string {
	if g == nil {
		return nil
	}
	return g.SummaryTitle
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetDiscoveryInterval() *int {
	if g == nil {
		return nil
	}
	return g.DiscoveryInterval
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarks) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarksRegions struct {
	Emails []string `json:"emails,omitempty" url:"emails,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarksRegions) GetEmails() []string {
	if g == nil {
		return nil
	}
	return g.Emails
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarksRegions) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarksRegions) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarksRegions
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarksRegions(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsBenchmarksRegions) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedConnectorReadResponseMsgDiscoverysettingsRegions struct {
	Region string `json:"region" url:"region"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsRegions) GetRegion() string {
	if g == nil {
		return ""
	}
	return g.Region
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsRegions) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsRegions) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedConnectorReadResponseMsgDiscoverysettingsRegions
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedConnectorReadResponseMsgDiscoverysettingsRegions(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedConnectorReadResponseMsgDiscoverysettingsRegions) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedConnectorReadResponseMsgSettings struct {
	Kind   string            `json:"kind" url:"kind"`
	Config []*SettingsConfig `json:"config,omitempty" url:"config,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedConnectorReadResponseMsgSettings) GetKind() string {
	if g == nil {
		return ""
	}
	return g.Kind
}

func (g *GeneratedConnectorReadResponseMsgSettings) GetConfig() []*SettingsConfig {
	if g == nil {
		return nil
	}
	return g.Config
}

func (g *GeneratedConnectorReadResponseMsgSettings) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedConnectorReadResponseMsgSettings) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedConnectorReadResponseMsgSettings
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedConnectorReadResponseMsgSettings(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedConnectorReadResponseMsgSettings) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type IntegrationCreateResponse struct {
	Msg  *string                            `json:"msg,omitempty" url:"msg,omitempty"`
	Data *GeneratedConnectorReadResponseMsg `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (i *IntegrationCreateResponse) GetMsg() *string {
	if i == nil {
		return nil
	}
	return i.Msg
}

func (i *IntegrationCreateResponse) GetData() *GeneratedConnectorReadResponseMsg {
	if i == nil {
		return nil
	}
	return i.Data
}

func (i *IntegrationCreateResponse) GetExtraProperties() map[string]interface{} {
	return i.extraProperties
}

func (i *IntegrationCreateResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler IntegrationCreateResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*i = IntegrationCreateResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *i)
	if err != nil {
		return err
	}
	i.extraProperties = extraProperties
	i.rawJSON = json.RawMessage(data)
	return nil
}

func (i *IntegrationCreateResponse) String() string {
	if len(i.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(i.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(i); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", i)
}

type IntegrationUpdateResponse struct {
	Msg  *string                            `json:"msg,omitempty" url:"msg,omitempty"`
	Data *GeneratedConnectorReadResponseMsg `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (i *IntegrationUpdateResponse) GetMsg() *string {
	if i == nil {
		return nil
	}
	return i.Msg
}

func (i *IntegrationUpdateResponse) GetData() *GeneratedConnectorReadResponseMsg {
	if i == nil {
		return nil
	}
	return i.Data
}

func (i *IntegrationUpdateResponse) GetExtraProperties() map[string]interface{} {
	return i.extraProperties
}

func (i *IntegrationUpdateResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler IntegrationUpdateResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*i = IntegrationUpdateResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *i)
	if err != nil {
		return err
	}
	i.extraProperties = extraProperties
	i.rawJSON = json.RawMessage(data)
	return nil
}

func (i *IntegrationUpdateResponse) String() string {
	if len(i.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(i.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(i); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", i)
}

type Settings struct {
	Kind   SettingsKindEnum  `json:"kind" url:"kind"`
	Config []*SettingsConfig `json:"config,omitempty" url:"config,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (s *Settings) GetKind() SettingsKindEnum {
	if s == nil {
		return ""
	}
	return s.Kind
}

func (s *Settings) GetConfig() []*SettingsConfig {
	if s == nil {
		return nil
	}
	return s.Config
}

func (s *Settings) GetExtraProperties() map[string]interface{} {
	return s.extraProperties
}

func (s *Settings) UnmarshalJSON(data []byte) error {
	type unmarshaler Settings
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = Settings(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *s)
	if err != nil {
		return err
	}
	s.extraProperties = extraProperties
	s.rawJSON = json.RawMessage(data)
	return nil
}

func (s *Settings) String() string {
	if len(s.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(s.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}

type SettingsConfig struct {
	InstallationId          *string `json:"installationId,omitempty" url:"installationId,omitempty"`
	AvatarUrl               *string `json:"avatar_url,omitempty" url:"avatar_url,omitempty"`
	FailedGhapiCall         *string `json:"failedGHAPICall,omitempty" url:"failedGHAPICall,omitempty"`
	Login                   *string `json:"login,omitempty" url:"login,omitempty"`
	SetupAction             *string `json:"setupAction,omitempty" url:"setupAction,omitempty"`
	GithubAppId             *string `json:"githubAppId,omitempty" url:"githubAppId,omitempty"`
	GithubAppWebhookSecret  *string `json:"githubAppWebhookSecret,omitempty" url:"githubAppWebhookSecret,omitempty"`
	GithubApiUrl            *string `json:"githubApiUrl,omitempty" url:"githubApiUrl,omitempty"`
	GithubHttpUrl           *string `json:"githubHttpUrl,omitempty" url:"githubHttpUrl,omitempty"`
	GithubAppClientId       *string `json:"githubAppClientId,omitempty" url:"githubAppClientId,omitempty"`
	GithubAppClientSecret   *string `json:"githubAppClientSecret,omitempty" url:"githubAppClientSecret,omitempty"`
	GithubAppPemFileContent *string `json:"githubAppPemFileContent,omitempty" url:"githubAppPemFileContent,omitempty"`
	GithubAppWebhookUrl     *string `json:"githubAppWebhookURL,omitempty" url:"githubAppWebhookURL,omitempty"`
	GitlabCreds             *string `json:"gitlabCreds,omitempty" url:"gitlabCreds,omitempty"`
	GitlabHttpUrl           *string `json:"gitlabHttpUrl,omitempty" url:"gitlabHttpUrl,omitempty"`
	GitlabApiUrl            *string `json:"gitlabApiUrl,omitempty" url:"gitlabApiUrl,omitempty"`
	AzureCreds              *string `json:"azureCreds,omitempty" url:"azureCreds,omitempty"`
	AzureDevopsHttpUrl      *string `json:"azureDevopsHttpUrl,omitempty" url:"azureDevopsHttpUrl,omitempty"`
	AzureDevopsApiUrl       *string `json:"azureDevopsApiUrl,omitempty" url:"azureDevopsApiUrl,omitempty"`
	BitbucketCreds          *string `json:"bitbucketCreds,omitempty" url:"bitbucketCreds,omitempty"`
	AwsAccessKeyId          *string `json:"awsAccessKeyId,omitempty" url:"awsAccessKeyId,omitempty"`
	AwsSecretAccessKey      *string `json:"awsSecretAccessKey,omitempty" url:"awsSecretAccessKey,omitempty"`
	AwsDefaultRegion        *string `json:"awsDefaultRegion,omitempty" url:"awsDefaultRegion,omitempty"`
	RoleArn                 *string `json:"roleArn,omitempty" url:"roleArn,omitempty"`
	ExternalId              *string `json:"externalId,omitempty" url:"externalId,omitempty"`
	DurationSeconds         *string `json:"durationSeconds,omitempty" url:"durationSeconds,omitempty"`
	ArmTenantId             *string `json:"armTenantId,omitempty" url:"armTenantId,omitempty"`
	ArmSubscriptionId       *string `json:"armSubscriptionId,omitempty" url:"armSubscriptionId,omitempty"`
	ArmClientId             *string `json:"armClientId,omitempty" url:"armClientId,omitempty"`
	ArmClientSecret         *string `json:"armClientSecret,omitempty" url:"armClientSecret,omitempty"`
	GcpConfigFileContent    *string `json:"gcpConfigFileContent,omitempty" url:"gcpConfigFileContent,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (s *SettingsConfig) GetInstallationId() *string {
	if s == nil {
		return nil
	}
	return s.InstallationId
}

func (s *SettingsConfig) GetAvatarUrl() *string {
	if s == nil {
		return nil
	}
	return s.AvatarUrl
}

func (s *SettingsConfig) GetFailedGhapiCall() *string {
	if s == nil {
		return nil
	}
	return s.FailedGhapiCall
}

func (s *SettingsConfig) GetLogin() *string {
	if s == nil {
		return nil
	}
	return s.Login
}

func (s *SettingsConfig) GetSetupAction() *string {
	if s == nil {
		return nil
	}
	return s.SetupAction
}

func (s *SettingsConfig) GetGithubAppId() *string {
	if s == nil {
		return nil
	}
	return s.GithubAppId
}

func (s *SettingsConfig) GetGithubAppWebhookSecret() *string {
	if s == nil {
		return nil
	}
	return s.GithubAppWebhookSecret
}

func (s *SettingsConfig) GetGithubApiUrl() *string {
	if s == nil {
		return nil
	}
	return s.GithubApiUrl
}

func (s *SettingsConfig) GetGithubHttpUrl() *string {
	if s == nil {
		return nil
	}
	return s.GithubHttpUrl
}

func (s *SettingsConfig) GetGithubAppClientId() *string {
	if s == nil {
		return nil
	}
	return s.GithubAppClientId
}

func (s *SettingsConfig) GetGithubAppClientSecret() *string {
	if s == nil {
		return nil
	}
	return s.GithubAppClientSecret
}

func (s *SettingsConfig) GetGithubAppPemFileContent() *string {
	if s == nil {
		return nil
	}
	return s.GithubAppPemFileContent
}

func (s *SettingsConfig) GetGithubAppWebhookUrl() *string {
	if s == nil {
		return nil
	}
	return s.GithubAppWebhookUrl
}

func (s *SettingsConfig) GetGitlabCreds() *string {
	if s == nil {
		return nil
	}
	return s.GitlabCreds
}

func (s *SettingsConfig) GetGitlabHttpUrl() *string {
	if s == nil {
		return nil
	}
	return s.GitlabHttpUrl
}

func (s *SettingsConfig) GetGitlabApiUrl() *string {
	if s == nil {
		return nil
	}
	return s.GitlabApiUrl
}

func (s *SettingsConfig) GetAzureCreds() *string {
	if s == nil {
		return nil
	}
	return s.AzureCreds
}

func (s *SettingsConfig) GetAzureDevopsHttpUrl() *string {
	if s == nil {
		return nil
	}
	return s.AzureDevopsHttpUrl
}

func (s *SettingsConfig) GetAzureDevopsApiUrl() *string {
	if s == nil {
		return nil
	}
	return s.AzureDevopsApiUrl
}

func (s *SettingsConfig) GetBitbucketCreds() *string {
	if s == nil {
		return nil
	}
	return s.BitbucketCreds
}

func (s *SettingsConfig) GetAwsAccessKeyId() *string {
	if s == nil {
		return nil
	}
	return s.AwsAccessKeyId
}

func (s *SettingsConfig) GetAwsSecretAccessKey() *string {
	if s == nil {
		return nil
	}
	return s.AwsSecretAccessKey
}

func (s *SettingsConfig) GetAwsDefaultRegion() *string {
	if s == nil {
		return nil
	}
	return s.AwsDefaultRegion
}

func (s *SettingsConfig) GetRoleArn() *string {
	if s == nil {
		return nil
	}
	return s.RoleArn
}

func (s *SettingsConfig) GetExternalId() *string {
	if s == nil {
		return nil
	}
	return s.ExternalId
}

func (s *SettingsConfig) GetDurationSeconds() *string {
	if s == nil {
		return nil
	}
	return s.DurationSeconds
}

func (s *SettingsConfig) GetArmTenantId() *string {
	if s == nil {
		return nil
	}
	return s.ArmTenantId
}

func (s *SettingsConfig) GetArmSubscriptionId() *string {
	if s == nil {
		return nil
	}
	return s.ArmSubscriptionId
}

func (s *SettingsConfig) GetArmClientId() *string {
	if s == nil {
		return nil
	}
	return s.ArmClientId
}

func (s *SettingsConfig) GetArmClientSecret() *string {
	if s == nil {
		return nil
	}
	return s.ArmClientSecret
}

func (s *SettingsConfig) GetGcpConfigFileContent() *string {
	if s == nil {
		return nil
	}
	return s.GcpConfigFileContent
}

func (s *SettingsConfig) GetExtraProperties() map[string]interface{} {
	return s.extraProperties
}

func (s *SettingsConfig) UnmarshalJSON(data []byte) error {
	type unmarshaler SettingsConfig
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = SettingsConfig(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *s)
	if err != nil {
		return err
	}
	s.extraProperties = extraProperties
	s.rawJSON = json.RawMessage(data)
	return nil
}

func (s *SettingsConfig) String() string {
	if len(s.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(s.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}

// * `GITHUB_COM` - GITHUB_COM
// * `GITHUB_APP_CUSTOM` - GITHUB_APP_CUSTOM
// * `AWS_STATIC` - AWS_STATIC
// * `GCP_STATIC` - GCP_STATIC
// * `GCP_OIDC` - GCP_OIDC
// * `AWS_RBAC` - AWS_RBAC
// * `AWS_OIDC` - AWS_OIDC
// * `AZURE_STATIC` - AZURE_STATIC
// * `AZURE_OIDC` - AZURE_OIDC
// * `BITBUCKET_ORG` - BITBUCKET_ORG
// * `GITLAB_COM` - GITLAB_COM
// * `AZURE_DEVOPS` - AZURE_DEVOPS
type SettingsKindEnum string

const (
	SettingsKindEnumGithubCom       SettingsKindEnum = "GITHUB_COM"
	SettingsKindEnumGithubAppCustom SettingsKindEnum = "GITHUB_APP_CUSTOM"
	SettingsKindEnumAwsStatic       SettingsKindEnum = "AWS_STATIC"
	SettingsKindEnumGcpStatic       SettingsKindEnum = "GCP_STATIC"
	SettingsKindEnumGcpOidc         SettingsKindEnum = "GCP_OIDC"
	SettingsKindEnumAwsRbac         SettingsKindEnum = "AWS_RBAC"
	SettingsKindEnumAwsOidc         SettingsKindEnum = "AWS_OIDC"
	SettingsKindEnumAzureStatic     SettingsKindEnum = "AZURE_STATIC"
	SettingsKindEnumAzureOidc       SettingsKindEnum = "AZURE_OIDC"
	SettingsKindEnumBitbucketOrg    SettingsKindEnum = "BITBUCKET_ORG"
	SettingsKindEnumGitlabCom       SettingsKindEnum = "GITLAB_COM"
	SettingsKindEnumAzureDevops     SettingsKindEnum = "AZURE_DEVOPS"
)

func NewSettingsKindEnumFromString(s string) (SettingsKindEnum, error) {
	switch s {
	case "GITHUB_COM":
		return SettingsKindEnumGithubCom, nil
	case "GITHUB_APP_CUSTOM":
		return SettingsKindEnumGithubAppCustom, nil
	case "AWS_STATIC":
		return SettingsKindEnumAwsStatic, nil
	case "GCP_STATIC":
		return SettingsKindEnumGcpStatic, nil
	case "GCP_OIDC":
		return SettingsKindEnumGcpOidc, nil
	case "AWS_RBAC":
		return SettingsKindEnumAwsRbac, nil
	case "AWS_OIDC":
		return SettingsKindEnumAwsOidc, nil
	case "AZURE_STATIC":
		return SettingsKindEnumAzureStatic, nil
	case "AZURE_OIDC":
		return SettingsKindEnumAzureOidc, nil
	case "BITBUCKET_ORG":
		return SettingsKindEnumBitbucketOrg, nil
	case "GITLAB_COM":
		return SettingsKindEnumGitlabCom, nil
	case "AZURE_DEVOPS":
		return SettingsKindEnumAzureDevops, nil
	}
	var t SettingsKindEnum
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (s SettingsKindEnum) Ptr() *SettingsKindEnum {
	return &s
}
