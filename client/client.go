// This file was auto-generated by Fern from our API Definition.

package client

import (
	core "github.com/StackGuardian/sg-sdk-go/core"
	integrations "github.com/StackGuardian/sg-sdk-go/integrations"
	option "github.com/StackGuardian/sg-sdk-go/option"
	organizations "github.com/StackGuardian/sg-sdk-go/organizations"
	policies "github.com/StackGuardian/sg-sdk-go/policies"
	role "github.com/StackGuardian/sg-sdk-go/role"
	runnergroups "github.com/StackGuardian/sg-sdk-go/runnergroups"
	stacks "github.com/StackGuardian/sg-sdk-go/stacks"
	stackworkflows "github.com/StackGuardian/sg-sdk-go/stackworkflows"
	templates "github.com/StackGuardian/sg-sdk-go/templates"
	workflowgroups "github.com/StackGuardian/sg-sdk-go/workflowgroups"
	workflowrunfacts "github.com/StackGuardian/sg-sdk-go/workflowrunfacts"
	workflowruns "github.com/StackGuardian/sg-sdk-go/workflowruns"
	workflows "github.com/StackGuardian/sg-sdk-go/workflows"
	http "net/http"
)

type Client struct {
	baseURL string
	caller  *core.Caller
	header  http.Header

	Organizations    *organizations.Client
	Integrations     *integrations.Client
	Policies         *policies.Client
	Role             *role.Client
	RunnerGroups     *runnergroups.Client
	WorkflowGroups   *workflowgroups.Client
	Stacks           *stacks.Client
	StackWorkflows   *stackworkflows.Client
	WorkflowRuns     *workflowruns.Client
	WorkflowRunFacts *workflowrunfacts.Client
	Workflows        *workflows.Client
	Templates        *templates.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: core.NewCaller(
			&core.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:           options.ToHeader(),
		Organizations:    organizations.NewClient(opts...),
		Integrations:     integrations.NewClient(opts...),
		Policies:         policies.NewClient(opts...),
		Role:             role.NewClient(opts...),
		RunnerGroups:     runnergroups.NewClient(opts...),
		WorkflowGroups:   workflowgroups.NewClient(opts...),
		Stacks:           stacks.NewClient(opts...),
		StackWorkflows:   stackworkflows.NewClient(opts...),
		WorkflowRuns:     workflowruns.NewClient(opts...),
		WorkflowRunFacts: workflowrunfacts.NewClient(opts...),
		Workflows:        workflows.NewClient(opts...),
		Templates:        templates.NewClient(opts...),
	}
}
