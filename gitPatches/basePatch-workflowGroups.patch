diff --git a/workflowgroups/client.go b/workflowgroups/client.go
index b1b905c..078a3a5 100644
--- a/workflowgroups/client.go
+++ b/workflowgroups/client.go
@@ -5,6 +5,7 @@ package workflowgroups
 import (
 	context "context"
 	http "net/http"
+	"strings"
 
 	sgsdkgo "github.com/StackGuardian/sg-sdk-go"
 	core "github.com/StackGuardian/sg-sdk-go/core"
@@ -88,16 +89,13 @@ func (c *Client) ReadWorkflowGroup(
 		c.baseURL,
 		"https://api.app.stackguardian.io",
 	)
-	endpointURL := internal.EncodeURL(
-		baseURL+"/api/v1/orgs/%v/wfgrps/%v",
-		org,
-		wfGrp,
-	)
+	//DO NOT REVERT - If wfGrp contains "/" then it might be a nested workflow group
+	//In this case we need to pass through the / without encoding it
+	endpointURL := escapeSlashesForNestedWorkflowGroup(baseURL, org, wfGrp)
 	headers := internal.MergeHeaders(
 		c.header.Clone(),
 		options.ToHeader(),
 	)
-
 	var response *sgsdkgo.WorkflowGroupGetResponse
 	if err := c.caller.Call(
 		ctx,
@@ -130,16 +128,13 @@ func (c *Client) DeleteWorkflowGroup(
 		c.baseURL,
 		"https://api.app.stackguardian.io",
 	)
-	endpointURL := internal.EncodeURL(
-		baseURL+"/api/v1/orgs/%v/wfgrps/%v",
-		org,
-		wfGrp,
-	)
+	//DO NOT REVERT - If wfGrp contains "/" then it might be a nested workflow group
+	//In this case we need to pass through the / without encoding it
+	endpointURL := escapeSlashesForNestedWorkflowGroup(baseURL, org, wfGrp)
 	headers := internal.MergeHeaders(
 		c.header.Clone(),
 		options.ToHeader(),
 	)
-
 	var response *sgsdkgo.WorkflowGroupDeleteResponse
 	if err := c.caller.Call(
 		ctx,
@@ -173,11 +168,9 @@ func (c *Client) UpdateWorkflowGroup(
 		c.baseURL,
 		"https://api.app.stackguardian.io",
 	)
-	endpointURL := internal.EncodeURL(
-		baseURL+"/api/v1/orgs/%v/wfgrps/%v",
-		org,
-		wfGrp,
-	)
+	//DO NOT REVERT - If wfGrp contains "/" then it might be a nested workflow group
+	//In this case we need to pass through the / without encoding it
+	endpointURL := escapeSlashesForNestedWorkflowGroup(baseURL, org, wfGrp)
 	headers := internal.MergeHeaders(
 		c.header.Clone(),
 		options.ToHeader(),
@@ -218,11 +211,7 @@ func (c *Client) CreateChildWorkflowGroup(
 		c.baseURL,
 		"https://api.app.stackguardian.io",
 	)
-	endpointURL := internal.EncodeURL(
-		baseURL+"/api/v1/orgs/%v/wfgrps/%v/wfgrps/",
-		org,
-		wfGrp,
-	)
+	endpointURL := escapeSlashesForNestedWorkflowGroup(baseURL, org, wfGrp) + "/wfgrps/"
 	headers := internal.MergeHeaders(
 		c.header.Clone(),
 		options.ToHeader(),
@@ -330,3 +319,23 @@ func (c *Client) ListAllWorkflowGroups(
 	}
 	return response, nil
 }
+
+// If wfGrp contains "/" then it might be a nested workflow group
+// In this case we need to pass through the / without encoding it
+func escapeSlashesForNestedWorkflowGroup(baseURL, org, wfGrp string) string {
+	var endpointURL string
+	if strings.Contains(wfGrp, "/") {
+		endpointURL = internal.EncodeURL(
+			baseURL+"/api/v1/orgs/%v/wfgrps/",
+			org,
+		)
+		endpointURL += wfGrp
+	} else {
+		endpointURL = internal.EncodeURL(
+			baseURL+"/api/v1/orgs/%v/wfgrps/%v",
+			org,
+			wfGrp,
+		)
+	}
+	return endpointURL
+}
