// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"

	core "github.com/StackGuardian/sg-sdk-go/core"
	internal "github.com/StackGuardian/sg-sdk-go/internal"
)

type Stack struct {
	// Triggers immediate stack creation process if true.
	RunOnCreate  *bool                    `json:"-" url:"runOnCreate,omitempty"`
	ResourceName *core.Optional[string]   `json:"ResourceName,omitempty" url:"-"`
	Description  *core.Optional[string]   `json:"Description,omitempty" url:"-"`
	Tags         *core.Optional[[]string] `json:"Tags,omitempty" url:"-"`
	// Used when one or all templates specified in the IAC Group are not supplied in TemplatesConfig.
	EnvironmentVariables *core.Optional[[]*EnvVars] `json:"EnvironmentVariables,omitempty" url:"-"`
	// Defines the default deployment config when the workflows in WorkflowConfig do not set this key.
	DeploymentPlatformConfig *core.Optional[[]*DeploymentPlatformConfig] `json:"DeploymentPlatformConfig,omitempty" url:"-"`
	Actions                  *core.Optional[map[string]*Actions]         `json:"Actions,omitempty" url:"-"`
	// The ID of the template group that this Stack is mapped to. Null if the Stack is not mapped to any template group.
	TemplateGroupId *core.Optional[string]                `json:"TemplateGroupId,omitempty" url:"-"`
	WorkflowsConfig *core.Optional[WorkflowsConfig]       `json:"WorkflowsConfig,omitempty" url:"-"`
	TemplatesConfig *core.Optional[TemplatesConfig]       `json:"TemplatesConfig,omitempty" url:"-"`
	UserSchedules   *core.Optional[[]*StackUserSchedules] `json:"UserSchedules,omitempty" url:"-"`
	// Used only when upgrading Stack.
	Operations *core.Optional[map[string]interface{}] `json:"Operations,omitempty" url:"-"`
	// Contextual tags to give meanings to your tags
	ContextTags *core.Optional[map[string]*string] `json:"ContextTags,omitempty" url:"-"`
	MiniSteps   *core.Optional[MiniStepsSchema]    `json:"MiniSteps,omitempty" url:"-"`
}

type ListAllStacksRequest struct {
	// Pagination token to retrieve the next set of results
	Lastevaluatedkey *string `json:"-" url:"lastevaluatedkey,omitempty"`
}

type PatchedStack struct {
	ResourceName *core.Optional[string]   `json:"ResourceName,omitempty" url:"-"`
	Description  *core.Optional[string]   `json:"Description,omitempty" url:"-"`
	Tags         *core.Optional[[]string] `json:"Tags,omitempty" url:"-"`
	// Used when one or all templates specified in the IAC Group are not supplied in TemplatesConfig.
	EnvironmentVariables *core.Optional[[]*EnvVars] `json:"EnvironmentVariables,omitempty" url:"-"`
	// Defines the default deployment config when the workflows in WorkflowConfig do not set this key.
	DeploymentPlatformConfig *core.Optional[[]*DeploymentPlatformConfig] `json:"DeploymentPlatformConfig,omitempty" url:"-"`
	Actions                  *core.Optional[map[string]*Actions]         `json:"Actions,omitempty" url:"-"`
	// The ID of the template group that this Stack is mapped to. Null if the Stack is not mapped to any template group.
	TemplateGroupId *core.Optional[string]                `json:"TemplateGroupId,omitempty" url:"-"`
	WorkflowsConfig *core.Optional[WorkflowsConfig]       `json:"WorkflowsConfig,omitempty" url:"-"`
	TemplatesConfig *core.Optional[TemplatesConfig]       `json:"TemplatesConfig,omitempty" url:"-"`
	UserSchedules   *core.Optional[[]*StackUserSchedules] `json:"UserSchedules,omitempty" url:"-"`
	// Used only when upgrading Stack.
	Operations *core.Optional[map[string]interface{}] `json:"Operations,omitempty" url:"-"`
	// Contextual tags to give meanings to your tags
	ContextTags *core.Optional[map[string]*string] `json:"ContextTags,omitempty" url:"-"`
	MiniSteps   *core.Optional[MiniStepsSchema]    `json:"MiniSteps,omitempty" url:"-"`
}

type GeneratedStackCreateResponse struct {
	Msg  string                            `json:"msg" url:"msg"`
	Data *GeneratedStackCreateResponseData `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackCreateResponse) GetMsg() string {
	if g == nil {
		return ""
	}
	return g.Msg
}

func (g *GeneratedStackCreateResponse) GetData() *GeneratedStackCreateResponseData {
	if g == nil {
		return nil
	}
	return g.Data
}

func (g *GeneratedStackCreateResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackCreateResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackCreateResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackCreateResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackCreateResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackCreateResponseData struct {
	Stack     *GeneratedStackCreateResponseDataStack       `json:"stack,omitempty" url:"stack,omitempty"`
	Workflows []*GeneratedStackCreateResponseDataWorkflows `json:"workflows,omitempty" url:"workflows,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackCreateResponseData) GetStack() *GeneratedStackCreateResponseDataStack {
	if g == nil {
		return nil
	}
	return g.Stack
}

func (g *GeneratedStackCreateResponseData) GetWorkflows() []*GeneratedStackCreateResponseDataWorkflows {
	if g == nil {
		return nil
	}
	return g.Workflows
}

func (g *GeneratedStackCreateResponseData) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackCreateResponseData) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackCreateResponseData
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackCreateResponseData(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackCreateResponseData) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackCreateResponseDataStack struct {
	ResourceName *string  `json:"ResourceName,omitempty" url:"ResourceName,omitempty"`
	Description  *string  `json:"Description,omitempty" url:"Description,omitempty"`
	Tags         []string `json:"Tags,omitempty" url:"Tags,omitempty"`
	// Used when one or all templates specified in the IAC Group are not supplied in TemplatesConfig.
	EnvironmentVariables []*EnvVars `json:"EnvironmentVariables,omitempty" url:"EnvironmentVariables,omitempty"`
	// Defines the default deployment config when the workflows in WorkflowConfig do not set this key.
	DeploymentPlatformConfig []*DeploymentPlatformConfig `json:"DeploymentPlatformConfig,omitempty" url:"DeploymentPlatformConfig,omitempty"`
	Actions                  map[string]*Actions         `json:"Actions,omitempty" url:"Actions,omitempty"`
	// The ID of the template group that this Stack is mapped to. Null if the Stack is not mapped to any template group.
	TemplateGroupId *string               `json:"TemplateGroupId,omitempty" url:"TemplateGroupId,omitempty"`
	WorkflowsConfig *WorkflowsConfig      `json:"WorkflowsConfig,omitempty" url:"WorkflowsConfig,omitempty"`
	TemplatesConfig *TemplatesConfig      `json:"TemplatesConfig,omitempty" url:"TemplatesConfig,omitempty"`
	UserSchedules   []*StackUserSchedules `json:"UserSchedules,omitempty" url:"UserSchedules,omitempty"`
	// Used only when upgrading Stack.
	Operations map[string]interface{} `json:"Operations,omitempty" url:"Operations,omitempty"`
	// Contextual tags to give meanings to your tags
	ContextTags          map[string]*string                `json:"ContextTags,omitempty" url:"ContextTags,omitempty"`
	MiniSteps            *MiniStepsSchema                  `json:"MiniSteps,omitempty" url:"MiniSteps,omitempty"`
	OrgId                string                            `json:"OrgId" url:"OrgId"`
	SubResourceId        string                            `json:"SubResourceId" url:"SubResourceId"`
	CreatedAt            int                               `json:"CreatedAt" url:"CreatedAt"`
	Authors              []string                          `json:"Authors,omitempty" url:"Authors,omitempty"`
	DocVersion           string                            `json:"DocVersion" url:"DocVersion"`
	IsActive             string                            `json:"IsActive" url:"IsActive"`
	IsArchive            string                            `json:"IsArchive" url:"IsArchive"`
	ActivitySubscribers  []string                          `json:"ActivitySubscribers,omitempty" url:"ActivitySubscribers,omitempty"`
	LatestWfStatus       string                            `json:"LatestWfStatus" url:"LatestWfStatus"`
	VcsConfig            *GeneratedStackWorkflowsVcsconfig `json:"VCSConfig,omitempty" url:"VCSConfig,omitempty"`
	ResourceType         string                            `json:"ResourceType" url:"ResourceType"`
	ModifiedAt           int                               `json:"ModifiedAt" url:"ModifiedAt"`
	WorkflowRelationsMap map[string]interface{}            `json:"WorkflowRelationsMap,omitempty" url:"WorkflowRelationsMap,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackCreateResponseDataStack) GetResourceName() *string {
	if g == nil {
		return nil
	}
	return g.ResourceName
}

func (g *GeneratedStackCreateResponseDataStack) GetDescription() *string {
	if g == nil {
		return nil
	}
	return g.Description
}

func (g *GeneratedStackCreateResponseDataStack) GetTags() []string {
	if g == nil {
		return nil
	}
	return g.Tags
}

func (g *GeneratedStackCreateResponseDataStack) GetEnvironmentVariables() []*EnvVars {
	if g == nil {
		return nil
	}
	return g.EnvironmentVariables
}

func (g *GeneratedStackCreateResponseDataStack) GetDeploymentPlatformConfig() []*DeploymentPlatformConfig {
	if g == nil {
		return nil
	}
	return g.DeploymentPlatformConfig
}

func (g *GeneratedStackCreateResponseDataStack) GetActions() map[string]*Actions {
	if g == nil {
		return nil
	}
	return g.Actions
}

func (g *GeneratedStackCreateResponseDataStack) GetTemplateGroupId() *string {
	if g == nil {
		return nil
	}
	return g.TemplateGroupId
}

func (g *GeneratedStackCreateResponseDataStack) GetWorkflowsConfig() *WorkflowsConfig {
	if g == nil {
		return nil
	}
	return g.WorkflowsConfig
}

func (g *GeneratedStackCreateResponseDataStack) GetTemplatesConfig() *TemplatesConfig {
	if g == nil {
		return nil
	}
	return g.TemplatesConfig
}

func (g *GeneratedStackCreateResponseDataStack) GetUserSchedules() []*StackUserSchedules {
	if g == nil {
		return nil
	}
	return g.UserSchedules
}

func (g *GeneratedStackCreateResponseDataStack) GetOperations() map[string]interface{} {
	if g == nil {
		return nil
	}
	return g.Operations
}

func (g *GeneratedStackCreateResponseDataStack) GetContextTags() map[string]*string {
	if g == nil {
		return nil
	}
	return g.ContextTags
}

func (g *GeneratedStackCreateResponseDataStack) GetMiniSteps() *MiniStepsSchema {
	if g == nil {
		return nil
	}
	return g.MiniSteps
}

func (g *GeneratedStackCreateResponseDataStack) GetOrgId() string {
	if g == nil {
		return ""
	}
	return g.OrgId
}

func (g *GeneratedStackCreateResponseDataStack) GetSubResourceId() string {
	if g == nil {
		return ""
	}
	return g.SubResourceId
}

func (g *GeneratedStackCreateResponseDataStack) GetCreatedAt() int {
	if g == nil {
		return 0
	}
	return g.CreatedAt
}

func (g *GeneratedStackCreateResponseDataStack) GetAuthors() []string {
	if g == nil {
		return nil
	}
	return g.Authors
}

func (g *GeneratedStackCreateResponseDataStack) GetDocVersion() string {
	if g == nil {
		return ""
	}
	return g.DocVersion
}

func (g *GeneratedStackCreateResponseDataStack) GetIsActive() string {
	if g == nil {
		return ""
	}
	return g.IsActive
}

func (g *GeneratedStackCreateResponseDataStack) GetIsArchive() string {
	if g == nil {
		return ""
	}
	return g.IsArchive
}

func (g *GeneratedStackCreateResponseDataStack) GetActivitySubscribers() []string {
	if g == nil {
		return nil
	}
	return g.ActivitySubscribers
}

func (g *GeneratedStackCreateResponseDataStack) GetLatestWfStatus() string {
	if g == nil {
		return ""
	}
	return g.LatestWfStatus
}

func (g *GeneratedStackCreateResponseDataStack) GetVcsConfig() *GeneratedStackWorkflowsVcsconfig {
	if g == nil {
		return nil
	}
	return g.VcsConfig
}

func (g *GeneratedStackCreateResponseDataStack) GetResourceType() string {
	if g == nil {
		return ""
	}
	return g.ResourceType
}

func (g *GeneratedStackCreateResponseDataStack) GetModifiedAt() int {
	if g == nil {
		return 0
	}
	return g.ModifiedAt
}

func (g *GeneratedStackCreateResponseDataStack) GetWorkflowRelationsMap() map[string]interface{} {
	if g == nil {
		return nil
	}
	return g.WorkflowRelationsMap
}

func (g *GeneratedStackCreateResponseDataStack) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackCreateResponseDataStack) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackCreateResponseDataStack
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackCreateResponseDataStack(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackCreateResponseDataStack) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackCreateResponseDataWorkflows struct {
	OrgId                     string                                                      `json:"OrgId" url:"OrgId"`
	SubResourceId             string                                                      `json:"SubResourceId" url:"SubResourceId"`
	ResourceId                string                                                      `json:"ResourceId" url:"ResourceId"`
	ContextTags               map[string]string                                           `json:"ContextTags,omitempty" url:"ContextTags,omitempty"`
	CreatedAt                 int                                                         `json:"CreatedAt" url:"CreatedAt"`
	ResourceName              string                                                      `json:"ResourceName" url:"ResourceName"`
	EnforcedPolicies          string                                                      `json:"EnforcedPolicies" url:"EnforcedPolicies"`
	Description               string                                                      `json:"Description" url:"Description"`
	Tags                      []interface{}                                               `json:"Tags,omitempty" url:"Tags,omitempty"`
	Authors                   []string                                                    `json:"Authors,omitempty" url:"Authors,omitempty"`
	DocVersion                string                                                      `json:"DocVersion" url:"DocVersion"`
	IsActive                  string                                                      `json:"IsActive" url:"IsActive"`
	IsArchive                 string                                                      `json:"IsArchive" url:"IsArchive"`
	ActivitySubscribers       []string                                                    `json:"ActivitySubscribers,omitempty" url:"ActivitySubscribers,omitempty"`
	LatestWfrunStatus         string                                                      `json:"LatestWfrunStatus" url:"LatestWfrunStatus"`
	WfStepsConfig             []interface{}                                               `json:"WfStepsConfig,omitempty" url:"WfStepsConfig,omitempty"`
	ResourceType              string                                                      `json:"ResourceType" url:"ResourceType"`
	ModifiedAt                int                                                         `json:"ModifiedAt" url:"ModifiedAt"`
	EnvironmentVariables      []interface{}                                               `json:"EnvironmentVariables,omitempty" url:"EnvironmentVariables,omitempty"`
	DeploymentPlatformConfig  []*DeploymentPlatformConfig                                 `json:"DeploymentPlatformConfig,omitempty" url:"DeploymentPlatformConfig,omitempty"`
	CacheConfig               map[string]interface{}                                      `json:"CacheConfig,omitempty" url:"CacheConfig,omitempty"`
	WfType                    string                                                      `json:"WfType" url:"WfType"`
	TerraformConfig           map[string]interface{}                                      `json:"TerraformConfig,omitempty" url:"TerraformConfig,omitempty"`
	UserSchedules             []interface{}                                               `json:"UserSchedules,omitempty" url:"UserSchedules,omitempty"`
	NumberOfApprovalsRequired int                                                         `json:"NumberOfApprovalsRequired" url:"NumberOfApprovalsRequired"`
	VcsConfig                 *GeneratedStackWorkflowsVcsconfig                           `json:"VCSConfig,omitempty" url:"VCSConfig,omitempty"`
	RunnerConstraints         *GeneratedStackCreateResponseDataWorkflowsRunnerconstraints `json:"RunnerConstraints,omitempty" url:"RunnerConstraints,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetOrgId() string {
	if g == nil {
		return ""
	}
	return g.OrgId
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetSubResourceId() string {
	if g == nil {
		return ""
	}
	return g.SubResourceId
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetResourceId() string {
	if g == nil {
		return ""
	}
	return g.ResourceId
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetContextTags() map[string]string {
	if g == nil {
		return nil
	}
	return g.ContextTags
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetCreatedAt() int {
	if g == nil {
		return 0
	}
	return g.CreatedAt
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetResourceName() string {
	if g == nil {
		return ""
	}
	return g.ResourceName
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetEnforcedPolicies() string {
	if g == nil {
		return ""
	}
	return g.EnforcedPolicies
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetDescription() string {
	if g == nil {
		return ""
	}
	return g.Description
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetTags() []interface{} {
	if g == nil {
		return nil
	}
	return g.Tags
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetAuthors() []string {
	if g == nil {
		return nil
	}
	return g.Authors
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetDocVersion() string {
	if g == nil {
		return ""
	}
	return g.DocVersion
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetIsActive() string {
	if g == nil {
		return ""
	}
	return g.IsActive
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetIsArchive() string {
	if g == nil {
		return ""
	}
	return g.IsArchive
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetActivitySubscribers() []string {
	if g == nil {
		return nil
	}
	return g.ActivitySubscribers
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetLatestWfrunStatus() string {
	if g == nil {
		return ""
	}
	return g.LatestWfrunStatus
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetWfStepsConfig() []interface{} {
	if g == nil {
		return nil
	}
	return g.WfStepsConfig
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetResourceType() string {
	if g == nil {
		return ""
	}
	return g.ResourceType
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetModifiedAt() int {
	if g == nil {
		return 0
	}
	return g.ModifiedAt
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetEnvironmentVariables() []interface{} {
	if g == nil {
		return nil
	}
	return g.EnvironmentVariables
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetDeploymentPlatformConfig() []*DeploymentPlatformConfig {
	if g == nil {
		return nil
	}
	return g.DeploymentPlatformConfig
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetCacheConfig() map[string]interface{} {
	if g == nil {
		return nil
	}
	return g.CacheConfig
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetWfType() string {
	if g == nil {
		return ""
	}
	return g.WfType
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetTerraformConfig() map[string]interface{} {
	if g == nil {
		return nil
	}
	return g.TerraformConfig
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetUserSchedules() []interface{} {
	if g == nil {
		return nil
	}
	return g.UserSchedules
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetNumberOfApprovalsRequired() int {
	if g == nil {
		return 0
	}
	return g.NumberOfApprovalsRequired
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetVcsConfig() *GeneratedStackWorkflowsVcsconfig {
	if g == nil {
		return nil
	}
	return g.VcsConfig
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetRunnerConstraints() *GeneratedStackCreateResponseDataWorkflowsRunnerconstraints {
	if g == nil {
		return nil
	}
	return g.RunnerConstraints
}

func (g *GeneratedStackCreateResponseDataWorkflows) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackCreateResponseDataWorkflows) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackCreateResponseDataWorkflows
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackCreateResponseDataWorkflows(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackCreateResponseDataWorkflows) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackCreateResponseDataWorkflowsRunnerconstraints struct {
	Selectors []string `json:"selectors,omitempty" url:"selectors,omitempty"`
	Type      string   `json:"type" url:"type"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackCreateResponseDataWorkflowsRunnerconstraints) GetSelectors() []string {
	if g == nil {
		return nil
	}
	return g.Selectors
}

func (g *GeneratedStackCreateResponseDataWorkflowsRunnerconstraints) GetType() string {
	if g == nil {
		return ""
	}
	return g.Type
}

func (g *GeneratedStackCreateResponseDataWorkflowsRunnerconstraints) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackCreateResponseDataWorkflowsRunnerconstraints) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackCreateResponseDataWorkflowsRunnerconstraints
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackCreateResponseDataWorkflowsRunnerconstraints(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackCreateResponseDataWorkflowsRunnerconstraints) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackGetResponse struct {
	Msg *GeneratedStackGetResponseMsg `json:"msg,omitempty" url:"msg,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackGetResponse) GetMsg() *GeneratedStackGetResponseMsg {
	if g == nil {
		return nil
	}
	return g.Msg
}

func (g *GeneratedStackGetResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackGetResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackGetResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackGetResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackGetResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackGetResponseMsg struct {
	ResourceName *string  `json:"ResourceName,omitempty" url:"ResourceName,omitempty"`
	Description  *string  `json:"Description,omitempty" url:"Description,omitempty"`
	Tags         []string `json:"Tags,omitempty" url:"Tags,omitempty"`
	// Used when one or all templates specified in the IAC Group are not supplied in TemplatesConfig.
	EnvironmentVariables []*EnvVars `json:"EnvironmentVariables,omitempty" url:"EnvironmentVariables,omitempty"`
	// Defines the default deployment config when the workflows in WorkflowConfig do not set this key.
	DeploymentPlatformConfig []*DeploymentPlatformConfig `json:"DeploymentPlatformConfig,omitempty" url:"DeploymentPlatformConfig,omitempty"`
	Actions                  map[string]*Actions         `json:"Actions,omitempty" url:"Actions,omitempty"`
	// The ID of the template group that this Stack is mapped to. Null if the Stack is not mapped to any template group.
	TemplateGroupId *string               `json:"TemplateGroupId,omitempty" url:"TemplateGroupId,omitempty"`
	WorkflowsConfig *WorkflowsConfig      `json:"WorkflowsConfig,omitempty" url:"WorkflowsConfig,omitempty"`
	TemplatesConfig *TemplatesConfig      `json:"TemplatesConfig,omitempty" url:"TemplatesConfig,omitempty"`
	UserSchedules   []*StackUserSchedules `json:"UserSchedules,omitempty" url:"UserSchedules,omitempty"`
	// Used only when upgrading Stack.
	Operations map[string]interface{} `json:"Operations,omitempty" url:"Operations,omitempty"`
	// Contextual tags to give meanings to your tags
	ContextTags          map[string]*string     `json:"ContextTags,omitempty" url:"ContextTags,omitempty"`
	MiniSteps            *MiniStepsSchema       `json:"MiniSteps,omitempty" url:"MiniSteps,omitempty"`
	StackFullId          string                 `json:"StackFullId" url:"StackFullId"`
	WorkflowRelationsMap map[string]interface{} `json:"WorkflowRelationsMap,omitempty" url:"WorkflowRelationsMap,omitempty"`
	IsActive             string                 `json:"IsActive" url:"IsActive"`
	Discrepancies        map[string]interface{} `json:"Discrepancies,omitempty" url:"Discrepancies,omitempty"`
	Authors              []string               `json:"Authors,omitempty" url:"Authors,omitempty"`
	ActivitySubscribers  []string               `json:"ActivitySubscribers,omitempty" url:"ActivitySubscribers,omitempty"`
	SubResourceId        string                 `json:"SubResourceId" url:"SubResourceId"`
	OrgId                string                 `json:"OrgId" url:"OrgId"`
	CreatedAt            float64                `json:"CreatedAt" url:"CreatedAt"`
	IsArchive            string                 `json:"IsArchive" url:"IsArchive"`
	CreationOrder        []string               `json:"CreationOrder,omitempty" url:"CreationOrder,omitempty"`
	StackParentId        string                 `json:"StackParentId" url:"StackParentId"`
	ResourceId           string                 `json:"ResourceId" url:"ResourceId"`
	ModifiedAt           float64                `json:"ModifiedAt" url:"ModifiedAt"`
	ParentId             string                 `json:"ParentId" url:"ParentId"`
	ResourceType         string                 `json:"ResourceType" url:"ResourceType"`
	CreatorEnv           string                 `json:"CreatorEnv" url:"CreatorEnv"`
	LatestWfStatus       string                 `json:"LatestWfStatus" url:"LatestWfStatus"`
	DeletionOrder        []string               `json:"DeletionOrder,omitempty" url:"DeletionOrder,omitempty"`
	StackIndexId         string                 `json:"StackIndexId" url:"StackIndexId"`
	DocVersion           string                 `json:"DocVersion" url:"DocVersion"`
	SgInternals          map[string]interface{} `json:"_SGInternals,omitempty" url:"_SGInternals,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackGetResponseMsg) GetResourceName() *string {
	if g == nil {
		return nil
	}
	return g.ResourceName
}

func (g *GeneratedStackGetResponseMsg) GetDescription() *string {
	if g == nil {
		return nil
	}
	return g.Description
}

func (g *GeneratedStackGetResponseMsg) GetTags() []string {
	if g == nil {
		return nil
	}
	return g.Tags
}

func (g *GeneratedStackGetResponseMsg) GetEnvironmentVariables() []*EnvVars {
	if g == nil {
		return nil
	}
	return g.EnvironmentVariables
}

func (g *GeneratedStackGetResponseMsg) GetDeploymentPlatformConfig() []*DeploymentPlatformConfig {
	if g == nil {
		return nil
	}
	return g.DeploymentPlatformConfig
}

func (g *GeneratedStackGetResponseMsg) GetActions() map[string]*Actions {
	if g == nil {
		return nil
	}
	return g.Actions
}

func (g *GeneratedStackGetResponseMsg) GetTemplateGroupId() *string {
	if g == nil {
		return nil
	}
	return g.TemplateGroupId
}

func (g *GeneratedStackGetResponseMsg) GetWorkflowsConfig() *WorkflowsConfig {
	if g == nil {
		return nil
	}
	return g.WorkflowsConfig
}

func (g *GeneratedStackGetResponseMsg) GetTemplatesConfig() *TemplatesConfig {
	if g == nil {
		return nil
	}
	return g.TemplatesConfig
}

func (g *GeneratedStackGetResponseMsg) GetUserSchedules() []*StackUserSchedules {
	if g == nil {
		return nil
	}
	return g.UserSchedules
}

func (g *GeneratedStackGetResponseMsg) GetOperations() map[string]interface{} {
	if g == nil {
		return nil
	}
	return g.Operations
}

func (g *GeneratedStackGetResponseMsg) GetContextTags() map[string]*string {
	if g == nil {
		return nil
	}
	return g.ContextTags
}

func (g *GeneratedStackGetResponseMsg) GetMiniSteps() *MiniStepsSchema {
	if g == nil {
		return nil
	}
	return g.MiniSteps
}

func (g *GeneratedStackGetResponseMsg) GetStackFullId() string {
	if g == nil {
		return ""
	}
	return g.StackFullId
}

func (g *GeneratedStackGetResponseMsg) GetWorkflowRelationsMap() map[string]interface{} {
	if g == nil {
		return nil
	}
	return g.WorkflowRelationsMap
}

func (g *GeneratedStackGetResponseMsg) GetIsActive() string {
	if g == nil {
		return ""
	}
	return g.IsActive
}

func (g *GeneratedStackGetResponseMsg) GetDiscrepancies() map[string]interface{} {
	if g == nil {
		return nil
	}
	return g.Discrepancies
}

func (g *GeneratedStackGetResponseMsg) GetAuthors() []string {
	if g == nil {
		return nil
	}
	return g.Authors
}

func (g *GeneratedStackGetResponseMsg) GetActivitySubscribers() []string {
	if g == nil {
		return nil
	}
	return g.ActivitySubscribers
}

func (g *GeneratedStackGetResponseMsg) GetSubResourceId() string {
	if g == nil {
		return ""
	}
	return g.SubResourceId
}

func (g *GeneratedStackGetResponseMsg) GetOrgId() string {
	if g == nil {
		return ""
	}
	return g.OrgId
}

func (g *GeneratedStackGetResponseMsg) GetCreatedAt() float64 {
	if g == nil {
		return 0
	}
	return g.CreatedAt
}

func (g *GeneratedStackGetResponseMsg) GetIsArchive() string {
	if g == nil {
		return ""
	}
	return g.IsArchive
}

func (g *GeneratedStackGetResponseMsg) GetCreationOrder() []string {
	if g == nil {
		return nil
	}
	return g.CreationOrder
}

func (g *GeneratedStackGetResponseMsg) GetStackParentId() string {
	if g == nil {
		return ""
	}
	return g.StackParentId
}

func (g *GeneratedStackGetResponseMsg) GetResourceId() string {
	if g == nil {
		return ""
	}
	return g.ResourceId
}

func (g *GeneratedStackGetResponseMsg) GetModifiedAt() float64 {
	if g == nil {
		return 0
	}
	return g.ModifiedAt
}

func (g *GeneratedStackGetResponseMsg) GetParentId() string {
	if g == nil {
		return ""
	}
	return g.ParentId
}

func (g *GeneratedStackGetResponseMsg) GetResourceType() string {
	if g == nil {
		return ""
	}
	return g.ResourceType
}

func (g *GeneratedStackGetResponseMsg) GetCreatorEnv() string {
	if g == nil {
		return ""
	}
	return g.CreatorEnv
}

func (g *GeneratedStackGetResponseMsg) GetLatestWfStatus() string {
	if g == nil {
		return ""
	}
	return g.LatestWfStatus
}

func (g *GeneratedStackGetResponseMsg) GetDeletionOrder() []string {
	if g == nil {
		return nil
	}
	return g.DeletionOrder
}

func (g *GeneratedStackGetResponseMsg) GetStackIndexId() string {
	if g == nil {
		return ""
	}
	return g.StackIndexId
}

func (g *GeneratedStackGetResponseMsg) GetDocVersion() string {
	if g == nil {
		return ""
	}
	return g.DocVersion
}

func (g *GeneratedStackGetResponseMsg) GetSgInternals() map[string]interface{} {
	if g == nil {
		return nil
	}
	return g.SgInternals
}

func (g *GeneratedStackGetResponseMsg) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackGetResponseMsg) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackGetResponseMsg
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackGetResponseMsg(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackGetResponseMsg) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackListAllResponse struct {
	Lastevaluatedkey string                              `json:"lastevaluatedkey" url:"lastevaluatedkey"`
	Msg              []*GeneratedStackListAllResponseMsg `json:"msg,omitempty" url:"msg,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackListAllResponse) GetLastevaluatedkey() string {
	if g == nil {
		return ""
	}
	return g.Lastevaluatedkey
}

func (g *GeneratedStackListAllResponse) GetMsg() []*GeneratedStackListAllResponseMsg {
	if g == nil {
		return nil
	}
	return g.Msg
}

func (g *GeneratedStackListAllResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackListAllResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackListAllResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackListAllResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackListAllResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackListAllResponseMsg struct {
	Authors        []string      `json:"Authors,omitempty" url:"Authors,omitempty"`
	ResourceName   string        `json:"ResourceName" url:"ResourceName"`
	IsActive       string        `json:"IsActive" url:"IsActive"`
	SubResourceId  string        `json:"SubResourceId" url:"SubResourceId"`
	Description    string        `json:"Description" url:"Description"`
	ResourceId     string        `json:"ResourceId" url:"ResourceId"`
	ModifiedAt     float64       `json:"ModifiedAt" url:"ModifiedAt"`
	ParentId       string        `json:"ParentId" url:"ParentId"`
	CreatedAt      float64       `json:"CreatedAt" url:"CreatedAt"`
	LatestWfStatus string        `json:"LatestWfStatus" url:"LatestWfStatus"`
	Tags           []interface{} `json:"Tags,omitempty" url:"Tags,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackListAllResponseMsg) GetAuthors() []string {
	if g == nil {
		return nil
	}
	return g.Authors
}

func (g *GeneratedStackListAllResponseMsg) GetResourceName() string {
	if g == nil {
		return ""
	}
	return g.ResourceName
}

func (g *GeneratedStackListAllResponseMsg) GetIsActive() string {
	if g == nil {
		return ""
	}
	return g.IsActive
}

func (g *GeneratedStackListAllResponseMsg) GetSubResourceId() string {
	if g == nil {
		return ""
	}
	return g.SubResourceId
}

func (g *GeneratedStackListAllResponseMsg) GetDescription() string {
	if g == nil {
		return ""
	}
	return g.Description
}

func (g *GeneratedStackListAllResponseMsg) GetResourceId() string {
	if g == nil {
		return ""
	}
	return g.ResourceId
}

func (g *GeneratedStackListAllResponseMsg) GetModifiedAt() float64 {
	if g == nil {
		return 0
	}
	return g.ModifiedAt
}

func (g *GeneratedStackListAllResponseMsg) GetParentId() string {
	if g == nil {
		return ""
	}
	return g.ParentId
}

func (g *GeneratedStackListAllResponseMsg) GetCreatedAt() float64 {
	if g == nil {
		return 0
	}
	return g.CreatedAt
}

func (g *GeneratedStackListAllResponseMsg) GetLatestWfStatus() string {
	if g == nil {
		return ""
	}
	return g.LatestWfStatus
}

func (g *GeneratedStackListAllResponseMsg) GetTags() []interface{} {
	if g == nil {
		return nil
	}
	return g.Tags
}

func (g *GeneratedStackListAllResponseMsg) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackListAllResponseMsg) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackListAllResponseMsg
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackListAllResponseMsg(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackListAllResponseMsg) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackOutputsResponse struct {
	Msg  string            `json:"msg" url:"msg"`
	Data map[string]string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackOutputsResponse) GetMsg() string {
	if g == nil {
		return ""
	}
	return g.Msg
}

func (g *GeneratedStackOutputsResponse) GetData() map[string]string {
	if g == nil {
		return nil
	}
	return g.Data
}

func (g *GeneratedStackOutputsResponse) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackOutputsResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackOutputsResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackOutputsResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackOutputsResponse) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackWorkflowsVcsconfig struct {
	IacVcsConfig *GeneratedStackWorkflowsVcsconfigIacvcsconfig `json:"iacVCSConfig,omitempty" url:"iacVCSConfig,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackWorkflowsVcsconfig) GetIacVcsConfig() *GeneratedStackWorkflowsVcsconfigIacvcsconfig {
	if g == nil {
		return nil
	}
	return g.IacVcsConfig
}

func (g *GeneratedStackWorkflowsVcsconfig) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackWorkflowsVcsconfig) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackWorkflowsVcsconfig
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackWorkflowsVcsconfig(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackWorkflowsVcsconfig) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type GeneratedStackWorkflowsVcsconfigIacvcsconfig struct {
	UseMarketplaceTemplate bool   `json:"useMarketplaceTemplate" url:"useMarketplaceTemplate"`
	IacTemplateId          string `json:"iacTemplateId" url:"iacTemplateId"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GeneratedStackWorkflowsVcsconfigIacvcsconfig) GetUseMarketplaceTemplate() bool {
	if g == nil {
		return false
	}
	return g.UseMarketplaceTemplate
}

func (g *GeneratedStackWorkflowsVcsconfigIacvcsconfig) GetIacTemplateId() string {
	if g == nil {
		return ""
	}
	return g.IacTemplateId
}

func (g *GeneratedStackWorkflowsVcsconfigIacvcsconfig) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GeneratedStackWorkflowsVcsconfigIacvcsconfig) UnmarshalJSON(data []byte) error {
	type unmarshaler GeneratedStackWorkflowsVcsconfigIacvcsconfig
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GeneratedStackWorkflowsVcsconfigIacvcsconfig(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GeneratedStackWorkflowsVcsconfigIacvcsconfig) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type StackDeleteResponse struct {
	Msg *string `json:"msg,omitempty" url:"msg,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (s *StackDeleteResponse) GetMsg() *string {
	if s == nil {
		return nil
	}
	return s.Msg
}

func (s *StackDeleteResponse) GetExtraProperties() map[string]interface{} {
	return s.extraProperties
}

func (s *StackDeleteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler StackDeleteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = StackDeleteResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *s)
	if err != nil {
		return err
	}
	s.extraProperties = extraProperties
	s.rawJSON = json.RawMessage(data)
	return nil
}

func (s *StackDeleteResponse) String() string {
	if len(s.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(s.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}
