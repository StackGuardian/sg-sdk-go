// This file was auto-generated by Fern from our API Definition.

package client

import (
	http "net/http"

	accessmanagement "github.com/StackGuardian/sg-sdk-go/accessmanagement"
	benchmarkreports "github.com/StackGuardian/sg-sdk-go/benchmarkreports"
	connectors "github.com/StackGuardian/sg-sdk-go/connectors"
	core "github.com/StackGuardian/sg-sdk-go/core"
	internal "github.com/StackGuardian/sg-sdk-go/internal"
	option "github.com/StackGuardian/sg-sdk-go/option"
	organizations "github.com/StackGuardian/sg-sdk-go/organizations"
	policies "github.com/StackGuardian/sg-sdk-go/policies"
	runnergroups "github.com/StackGuardian/sg-sdk-go/runnergroups"
	secrets "github.com/StackGuardian/sg-sdk-go/secrets"
	stackruns "github.com/StackGuardian/sg-sdk-go/stackruns"
	stacks "github.com/StackGuardian/sg-sdk-go/stacks"
	stackworkflowrunfacts "github.com/StackGuardian/sg-sdk-go/stackworkflowrunfacts"
	stackworkflowruns "github.com/StackGuardian/sg-sdk-go/stackworkflowruns"
	stackworkflows "github.com/StackGuardian/sg-sdk-go/stackworkflows"
	templates "github.com/StackGuardian/sg-sdk-go/templates"
	workflowgroups "github.com/StackGuardian/sg-sdk-go/workflowgroups"
	workflowrunfacts "github.com/StackGuardian/sg-sdk-go/workflowrunfacts"
	workflowruns "github.com/StackGuardian/sg-sdk-go/workflowruns"
	workflows "github.com/StackGuardian/sg-sdk-go/workflows"
)

type Client struct {
	baseURL string
	caller  *internal.Caller
	header  http.Header

	Organizations         *organizations.Client
	AccessManagement      *accessmanagement.Client
	Connectors            *connectors.Client
	Policies              *policies.Client
	BenchmarkReports      *benchmarkreports.Client
	RunnerGroups          *runnergroups.Client
	Secrets               *secrets.Client
	Templates             *templates.Client
	WorkflowGroups        *workflowgroups.Client
	Stacks                *stacks.Client
	StackRuns             *stackruns.Client
	StackWorkflows        *stackworkflows.Client
	StackWorkflowRuns     *stackworkflowruns.Client
	StackWorkflowRunFacts *stackworkflowrunfacts.Client
	Workflows             *workflows.Client
	WorkflowRuns          *workflowruns.Client
	WorkflowRunFacts      *workflowrunfacts.Client
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:                options.ToHeader(),
		Organizations:         organizations.NewClient(opts...),
		AccessManagement:      accessmanagement.NewClient(opts...),
		Connectors:            connectors.NewClient(opts...),
		Policies:              policies.NewClient(opts...),
		BenchmarkReports:      benchmarkreports.NewClient(opts...),
		RunnerGroups:          runnergroups.NewClient(opts...),
		Secrets:               secrets.NewClient(opts...),
		Templates:             templates.NewClient(opts...),
		WorkflowGroups:        workflowgroups.NewClient(opts...),
		Stacks:                stacks.NewClient(opts...),
		StackRuns:             stackruns.NewClient(opts...),
		StackWorkflows:        stackworkflows.NewClient(opts...),
		StackWorkflowRuns:     stackworkflowruns.NewClient(opts...),
		StackWorkflowRunFacts: stackworkflowrunfacts.NewClient(opts...),
		Workflows:             workflows.NewClient(opts...),
		WorkflowRuns:          workflowruns.NewClient(opts...),
		WorkflowRunFacts:      workflowrunfacts.NewClient(opts...),
	}
}
