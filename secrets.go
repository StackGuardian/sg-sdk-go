// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"

	core "github.com/StackGuardian/sg-sdk-go/core"
	internal "github.com/StackGuardian/sg-sdk-go/internal"
)

type Secret struct {
	// Secret name
	ResourceName string `json:"ResourceName" url:"-"`
	// Secret value
	ResourceValue string `json:"ResourceValue" url:"-"`
}

type PatchedSecret struct {
	// Secret name
	ResourceName *core.Optional[string] `json:"ResourceName,omitempty" url:"-"`
	// Secret value
	ResourceValue *core.Optional[string] `json:"ResourceValue,omitempty" url:"-"`
}

type Attribute struct {
	Key   string `json:"Key" url:"Key"`
	Value string `json:"Value" url:"Value"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *Attribute) GetKey() string {
	if a == nil {
		return ""
	}
	return a.Key
}

func (a *Attribute) GetValue() string {
	if a == nil {
		return ""
	}
	return a.Value
}

func (a *Attribute) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *Attribute) UnmarshalJSON(data []byte) error {
	type unmarshaler Attribute
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = Attribute(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *Attribute) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type Resource struct {
	ResourceName     string       `json:"ResourceName" url:"ResourceName"`
	LastModifiedDate int          `json:"LastModifiedDate" url:"LastModifiedDate"`
	Attributes       []*Attribute `json:"Attributes,omitempty" url:"Attributes,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (r *Resource) GetResourceName() string {
	if r == nil {
		return ""
	}
	return r.ResourceName
}

func (r *Resource) GetLastModifiedDate() int {
	if r == nil {
		return 0
	}
	return r.LastModifiedDate
}

func (r *Resource) GetAttributes() []*Attribute {
	if r == nil {
		return nil
	}
	return r.Attributes
}

func (r *Resource) GetExtraProperties() map[string]interface{} {
	return r.extraProperties
}

func (r *Resource) UnmarshalJSON(data []byte) error {
	type unmarshaler Resource
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*r = Resource(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *r)
	if err != nil {
		return err
	}
	r.extraProperties = extraProperties
	r.rawJSON = json.RawMessage(data)
	return nil
}

func (r *Resource) String() string {
	if len(r.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(r.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(r); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", r)
}

type SecretListAllResponse struct {
	Msg []*Resource `json:"msg,omitempty" url:"msg,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (s *SecretListAllResponse) GetMsg() []*Resource {
	if s == nil {
		return nil
	}
	return s.Msg
}

func (s *SecretListAllResponse) GetExtraProperties() map[string]interface{} {
	return s.extraProperties
}

func (s *SecretListAllResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler SecretListAllResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = SecretListAllResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *s)
	if err != nil {
		return err
	}
	s.extraProperties = extraProperties
	s.rawJSON = json.RawMessage(data)
	return nil
}

func (s *SecretListAllResponse) String() string {
	if len(s.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(s.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}

type SecretResponse struct {
	Msg string `json:"msg" url:"msg"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (s *SecretResponse) GetMsg() string {
	if s == nil {
		return ""
	}
	return s.Msg
}

func (s *SecretResponse) GetExtraProperties() map[string]interface{} {
	return s.extraProperties
}

func (s *SecretResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler SecretResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = SecretResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *s)
	if err != nil {
		return err
	}
	s.extraProperties = extraProperties
	s.rawJSON = json.RawMessage(data)
	return nil
}

func (s *SecretResponse) String() string {
	if len(s.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(s.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}
